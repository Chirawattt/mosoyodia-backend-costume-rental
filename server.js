require("dotenv").config();
const express = require("express");
const bodyParser = require("body-parser");
const cors = require("cors");
const path = require("path");
const fs = require("fs");
const sequelize = require("./src/config/database");

const app = express();
const PORT = process.env.PORT || 5000;

const costumeRoutes = require("./src/routes/costumeRoutes");
const reviewImageRoutes = require("./src/routes/reviewImageRoutes");
const authRoutes = require("./src/routes/authRoutes");

// Ensure uploads directory exists
const publicUploadsDir = path.join(__dirname, "public/uploads");
if (!fs.existsSync(publicUploadsDir)) {
  fs.mkdirSync(publicUploadsDir, { recursive: true });
  console.log("Created public/uploads directory");
}

// Middleware
app.use(cors());
app.use(express.json());
app.use(express.urlencoded({ extended: true })); // üî• ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö `x-www-form-urlencoded`
app.use(bodyParser.json()); // ‚úÖ ‡πÉ‡∏ä‡πâ BodyParser ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤ `req.body`

// ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡πâ Express ‡πÉ‡∏ä‡πâ Static Files ‡∏à‡∏≤‡∏Å `uploads/` ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏î‡∏∂‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏°‡∏≤‡πÅ‡∏™‡∏î‡∏á‡πÑ‡∏î‡πâ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
app.use("/uploads", express.static(path.join(__dirname, "uploads")));
// ‡πÄ‡∏ä‡πà‡∏ô {BASE_URL}/uploads/1741425254609-KMN00010001.jpg

// Routes
app.get("/", (req, res) => {
  res.send("Backend is running...");
});

// ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô costumeRoutes
app.use("/api/costumes", costumeRoutes);

// ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô reviewImageRoutes
app.use("/api/images", reviewImageRoutes);

// ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô authRoutes
app.use("/api/auth", authRoutes);

// ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô uploads ‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå public
app.use("/uploads", express.static("public/uploads")); // ‡πÄ‡∏™‡∏¥‡∏£‡πå‡∏ü‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û

// ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á
async function initializeDatabase() {
  try {
    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    await sequelize.authenticate();
    console.log("Connected to Railway Database");

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ï‡∏≤‡∏°‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß
    await sequelize.sync({ force: false });
    console.log("Railway Database connected successfully");

    // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏£‡∏±‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
    app.listen(PORT, () => {
      console.log(`Server is running on port ${PORT}`);
    });
  } catch (error) {
    console.error("Cannot connect to the database:", error);
  }
}

// ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÅ‡∏≠‡∏õ‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡∏ô
initializeDatabase();
